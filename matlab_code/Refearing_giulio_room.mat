{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red31\green124\blue26;\red140\green0\blue236;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c13333\c54510\c13333;\cssrgb\c62745\c12549\c94118;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\
\pard\pardeftab720\sl320\partightenfactor0
\cf3 \strokec3 % Prior to running this MATLAB code template, assign the channel variables.\cf2 \strokec2 \
\cf3 \strokec3 % Set 'readChannelID' to the channel ID of the channel to read from. \cf2 \strokec2 \
\cf3 \strokec3 % Also, assign the read field IDs to the variables 'fieldID1', and 'fieldID2'. \cf2 \strokec2 \
\
\
\cf3 \strokec3 %  channel ID to read data from:\cf2 \strokec2 \
readChannelID = 852298;\
\cf3 \strokec3 % list of relevant fields\cf2 \strokec2 \
fieldID1 = 1;\
\
\
fieldID2 = 3;\
fieldID3 = 5;\
\
\
\cf3 \strokec3 % Channel Read API Key \cf2 \strokec2 \
\
\
readAPIKey = \cf4 \strokec4 '5APFX9NW5QHXDC2F'\cf2 \strokec2 ;\
\
\
\cf3 \strokec3 %% Read Data %%\cf2 \strokec2 \
\
\
\cf3 \strokec3 % Read first data variable\cf2 \strokec2 \
A = thingSpeakRead(readChannelID, \cf4 \strokec4 'Field'\cf2 \strokec2 , fieldID1, \cf4 \strokec4 'NumPoints'\cf2 \strokec2 , 8000, \cf4 \strokec4 'ReadKey'\cf2 \strokec2 , readAPIKey,\cf4 \strokec4 'outputFormat'\cf2 \strokec2 ,\cf4 \strokec4 'timetable'\cf2 \strokec2 );\
\
\
\cf3 \strokec3 % Read second data variable\cf2 \strokec2 \
B = thingSpeakRead(readChannelID, \cf4 \strokec4 'Field'\cf2 \strokec2 , fieldID2, \cf4 \strokec4 'NumPoints'\cf2 \strokec2 , 8000, \cf4 \strokec4 'ReadKey'\cf2 \strokec2 , readAPIKey,\cf4 \strokec4 'outputFormat'\cf2 \strokec2 ,\cf4 \strokec4 'timetable'\cf2 \strokec2 );\
\cf3 \strokec3 % Read third\cf2 \strokec2 \
C = thingSpeakRead(readChannelID, \cf4 \strokec4 'Field'\cf2 \strokec2 , fieldID3, \cf4 \strokec4 'NumPoints'\cf2 \strokec2 , 8000, \cf4 \strokec4 'ReadKey'\cf2 \strokec2 , readAPIKey,\cf4 \strokec4 'outputFormat'\cf2 \strokec2 ,\cf4 \strokec4 'timetable'\cf2 \strokec2 );\
\
\
\cf3 \strokec3 % Synchronize two timestables and fill in missing data using linear interpolation\cf2 \strokec2 \
TT = synchronize(A,B,\cf4 \strokec4 'union'\cf2 \strokec2 ,\cf4 \strokec4 'linear'\cf2 \strokec2 );\
TT = synchronize(TT,C,\cf4 \strokec4 'union'\cf2 \strokec2 ,\cf4 \strokec4 'linear'\cf2 \strokec2 );\
\cf3 \strokec3 %% Visualize Data %%\cf2 \strokec2 \
figure;\
\cf3 \strokec3 %yyaxis left;\cf2 \strokec2 \
\cf3 \strokec3 %plot(time1, data1);\cf2 \strokec2 \
\cf3 \strokec3 %legend(\{'Salotto','letto'\});\cf2 \strokec2 \
\cf3 \strokec3 %yyaxis right;\cf2 \strokec2 \
\cf3 \strokec3 %plot(time2, newdata);\cf2 \strokec2 \
\
\
delta1=TT.TemperatureGiulioRoom - TT.TemperatureMainBedroom;\
delta2=TT.TemperatureGiulioRoom - TT.TemperatureLivingRoom;\
\
\
\
\
\cf3 \strokec3 % Plot Temperature delta over time\cf2 \strokec2 \
plotyy(TT.Timestamps,delta1,TT.Timestamps,delta2);\
        \
title(\cf4 \strokec4 'Temperature delta related to Giulio room '\cf2 \strokec2 );\
xlabel(\cf4 \strokec4 'Temperature '\cf2 \strokec2 );\
legend(\cf4 \strokec4 'Giulio room vs Main bedroom'\cf2 \strokec2 ,\cf4 \strokec4 'Giulio room vs Leaving room'\cf2 \strokec2 );\
\
\
\
\
}